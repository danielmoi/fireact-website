<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Fireactjs – Components</title><link>https://fireactjs.com/docs/core-package/components/</link><description>Recent content in Components on Fireactjs</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://fireactjs.com/docs/core-package/components/index.xml" rel="self" type="application/rss+xml"/><item><title>Docs: AppTemplate</title><link>https://fireactjs.com/docs/core-package/components/apptemplate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/apptemplate/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>AppTemplate is a template component that controls the layout of the logged-in state of your application. It has a few props for customizing the interface such as your logo and brand name, menu etc. Below is a screenshot of the component and the positions of the props.&lt;/p>
&lt;h2 id="screenshot">Screenshot&lt;/h2>
&lt;p>&lt;img src="screenshot.png" alt="Screenshot">&lt;/p>
&lt;h2 id="props">Props&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Prop Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>logo&lt;/td>
&lt;td>This is the logo component to be displayed in the top-left of the layout&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>drawerMenu&lt;/td>
&lt;td>This is the main menu in the left sidebar. See &lt;!-- raw HTML omitted --> component for example.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>toolbarChildren&lt;/td>
&lt;td>These are the child components in the left part of the toolbar&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>toolBarMenu&lt;/td>
&lt;td>This is the toolbar menu component in the right part of the toolbar. See &lt;!-- raw HTML omitted --> component for example.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/templates/AppTemplate.js">https://github.com/fireactjs/core/blob/main/src/lib/components/templates/AppTemplate.js&lt;/a>&lt;/p></description></item><item><title>Docs: AuthProvider</title><link>https://fireactjs.com/docs/core-package/components/authprovider/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/authprovider/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>AuthProvider is an invisible component to wrap the whole application and detects if the current user has signed in. It stores the user state in a context variable and passes it to the children elements.&lt;/p>
&lt;h2 id="context-variables">Context Variables&lt;/h2>
&lt;p>The context variables AuthProvider offers to the children components.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Prop Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>authUser&lt;/td>
&lt;td>The JSON object contains the user data. authUser.user contains the current user data if the user has signed in or null for users who haven’t signed in. authUser.data is a JSON for custom data object you need to store for the current user. authUser.checked indicates if the status of the current user has been checked.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>setAuthUser&lt;/td>
&lt;td>This sets the authUser context variable.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>fireabaseApp&lt;/td>
&lt;td>This is the Firebase app variable that can be reused in the children components&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/Auth.js">https://github.com/fireactjs/core/blob/main/src/lib/components/Auth.js&lt;/a>&lt;/p></description></item><item><title>Docs: AuthRoutes</title><link>https://fireactjs.com/docs/core-package/components/authroutes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/authroutes/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>AuthRoutes is the component to check the current user sign-in state. If the user’s &lt;code>authUser.checked&lt;/code> is &lt;code>false&lt;/code>, it will show a loading screen with the &lt;code>&amp;lt;Loader /&amp;gt;&lt;/code> component. Once the user’s sign-in state is checked, which means &lt;code>authUser.checked&lt;/code> is &lt;code>true&lt;/code>, it will either redirect the user to the sign-in page when the user hasn’t signed in or show the nested React routes.&lt;/p>
&lt;h2 id="props">Props&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Prop Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>loader&lt;/td>
&lt;td>This is the loader component to be displayed when the application is loading user sign-in state data&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/Auth.js">https://github.com/fireactjs/core/blob/main/src/lib/components/Auth.js&lt;/a>&lt;/p></description></item><item><title>Docs: FireactProvider</title><link>https://fireactjs.com/docs/core-package/components/fireactprovider/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/fireactprovider/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>FireactProvider is an invisible component to wrap the whole application to provide the framework configurations via a context variable &lt;code>config&lt;/code>. You can extend the &lt;code>config&lt;/code> JSON object by attaching new properties to it.&lt;/p>
&lt;p>At a minimum, the framework expects the &lt;code>config&lt;/code> JSON contains the following properties:&lt;/p>
&lt;ul>
&lt;li>&lt;code>firebaseConfig&lt;/code> - the configurations of your Firebase project&lt;/li>
&lt;li>&lt;code>brand&lt;/code> - the brand name of your project&lt;/li>
&lt;li>&lt;code>pathnames&lt;/code> - the components and their path names as described above&lt;/li>
&lt;li>&lt;code>authProviders&lt;/code> - the configurations of the authentication providers&lt;/li>
&lt;/ul>
&lt;h2 id="context-variables">Context Variables&lt;/h2>
&lt;p>The context variables AuthProvider offers to the children components.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Prop Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>config&lt;/td>
&lt;td>The framework configurations including firebaseConfig, brand, pathnames and authProviders.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/Fireact.js">https://github.com/fireactjs/core/blob/main/src/lib/components/Fireact.js&lt;/a>&lt;/p></description></item><item><title>Docs: MainMenu</title><link>https://fireactjs.com/docs/core-package/components/mainmenu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/mainmenu/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>MainMenu is the component to display the menu in the left sidebar of the application layout. By default, it contains two menu items: Application Home and User Profile. You can extend the menu by replacing the component with your own component.&lt;/p>
&lt;h2 id="screenshot">Screenshot&lt;/h2>
&lt;p>&lt;img src="screenshot.png" alt="Screenshot">&lt;/p>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/menus/MainMenu.js">https://github.com/fireactjs/core/blob/main/src/lib/components/menus/MainMenu.js&lt;/a>&lt;/p></description></item><item><title>Docs: PublicTemplate</title><link>https://fireactjs.com/docs/core-package/components/publictemplate/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/publictemplate/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>PublicTemplate is a layout component to control the look and feel of the public pages for the sign-in and sign-up processes. It displays the content in the centre of the page layout.&lt;/p>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/templates/PublicTemplate.js">https://github.com/fireactjs/core/blob/main/src/lib/components/templates/PublicTemplate.js&lt;/a>&lt;/p></description></item><item><title>Docs: ResetPassword</title><link>https://fireactjs.com/docs/core-package/components/resetpassword/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/resetpassword/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>ResetPassword is a form component for users to input their emails to request a password reset. The form will trigger the reset password process in Firebase Authentication. There is a rate limit enforced by Firebase so that it won’t be used to spam users.&lt;/p>
&lt;h2 id="screenshot">Screenshot&lt;/h2>
&lt;p>&lt;img src="screenshot.png" alt="Screenshot">&lt;/p>
&lt;h2 id="props">Props&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Prop Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>logo&lt;/td>
&lt;td>This is the logo component to be displayed at the top of the form&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/auth/ResetPassword.js">https://github.com/fireactjs/core/blob/main/src/lib/components/auth/ResetPassword.js&lt;/a>&lt;/p></description></item><item><title>Docs: SignIn</title><link>https://fireactjs.com/docs/core-package/components/signin/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/signin/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>SignIn is a form component for users to sign in to the application via email and password or one of the enabled single sign-on methods. It shows the single sign-on buttons based on the provider JSON. Once the user signs in successfully, it will redirect the user to the &lt;code>successUrl&lt;/code> or the URL pathname in the &lt;code>re&lt;/code> parameter.&lt;/p>
&lt;h2 id="screenshot">Screenshot&lt;/h2>
&lt;p>&lt;img src="screenshot.png" alt="Screenshot">&lt;/p>
&lt;h2 id="props">Props&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Prop Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>logo&lt;/td>
&lt;td>This is the logo component to be displayed at the top of the form&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>successUrl&lt;/td>
&lt;td>The URL to redirect users to after signing in, if no re parameter is provided in the URL&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/auth/SignIn.js">https://github.com/fireactjs/core/blob/main/src/lib/components/auth/SignIn.js&lt;/a>&lt;/p></description></item><item><title>Docs: SignUp</title><link>https://fireactjs.com/docs/core-package/components/signup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/signup/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>SignUp is the form component for users to sign up for new accounts with email and password. It requires email, full name and password to sign up.&lt;/p>
&lt;h2 id="screenshot">Screenshot&lt;/h2>
&lt;p>&lt;img src="screenshot.png" alt="Screenshot">&lt;/p>
&lt;h2 id="props">Props&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Prop Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>logo&lt;/td>
&lt;td>This is the logo component to be displayed at the top of the form&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>successUrl&lt;/td>
&lt;td>The URL to redirect users to after signing up. If no successUrl is provided, the sign up process will redirect users back to the homepage after signing up.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/auth/SignUp.js">https://github.com/fireactjs/core/blob/main/src/lib/components/auth/SignUp.js&lt;/a>&lt;/p></description></item><item><title>Docs: UserDelete</title><link>https://fireactjs.com/docs/core-package/components/userdelete/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/userdelete/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>UserDelete is a form component for the current user to delete their account. It is linked from the UserProfile component. After the account is successfully deleted, the user will no longer be in the signed-in state and will be redirected back to the homepage.&lt;/p>
&lt;h2 id="screenshot">Screenshot&lt;/h2>
&lt;p>&lt;img src="screenshot.png" alt="Screenshot">&lt;/p>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/user/UserDelete.js">https://github.com/fireactjs/core/blob/main/src/lib/components/user/UserDelete.js&lt;/a>&lt;/p></description></item><item><title>Docs: UserMenu</title><link>https://fireactjs.com/docs/core-package/components/usermenu/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/usermenu/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>UserMenu is the menu at the top-right of the toolbar for the current user to manage their profile and sign out. It can be customized by inserting additional menu items as &lt;code>customItems&lt;/code> prop. You can also replace it with your own menu component.&lt;/p>
&lt;h2 id="screenshot">Screenshot&lt;/h2>
&lt;p>&lt;img src="screenshot.png" alt="Screenshot">&lt;/p>
&lt;h2 id="props">Props&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Prop Name&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>customItems&lt;/td>
&lt;td>An array of menu item elements to be inserted between Profile and Sign Out options.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/menus/UserMenu.js">https://github.com/fireactjs/core/blob/main/src/lib/components/menus/UserMenu.js&lt;/a>&lt;/p></description></item><item><title>Docs: UserProfile</title><link>https://fireactjs.com/docs/core-package/components/userprofile/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/userprofile/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>UserProfile is a component to display the user profile information such as avatar, email and name, and to link to the profile management features for updating email, name and password. It also shows if the email is verified. When the user’s email is unverified, the user can click on the item to trigger a verification email.&lt;/p>
&lt;h2 id="screenshot">Screenshot&lt;/h2>
&lt;p>&lt;img src="screenshot.png" alt="Screenshot">&lt;/p>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/user/UserProfile.js">https://github.com/fireactjs/core/blob/main/src/lib/components/user/UserProfile.js&lt;/a>&lt;/p></description></item><item><title>Docs: UserUpdateEmail</title><link>https://fireactjs.com/docs/core-package/components/userupdateemail/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/userupdateemail/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>UserUpdateEmail is a form component for the current user to update their email address. It is linked from the UserProfile component.&lt;/p>
&lt;h2 id="screenshot">Screenshot&lt;/h2>
&lt;p>&lt;img src="screenshot.png" alt="Screenshot">&lt;/p>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/user/UserUpdateEmail.js">https://github.com/fireactjs/core/blob/main/src/lib/components/user/UserUpdateEmail.js&lt;/a>&lt;/p></description></item><item><title>Docs: UserUpdateName</title><link>https://fireactjs.com/docs/core-package/components/userupdatename/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/userupdatename/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>UserUpdateName is a form component for the current user to update their full name. It is linked from the UserProfile component.&lt;/p>
&lt;h2 id="screenshot">Screenshot&lt;/h2>
&lt;p>&lt;img src="screenshot.png" alt="Screenshot">&lt;/p>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/user/UserUpdateName.js">https://github.com/fireactjs/core/blob/main/src/lib/components/user/UserUpdateName.js&lt;/a>&lt;/p></description></item><item><title>Docs: UserUpdatePassword</title><link>https://fireactjs.com/docs/core-package/components/userupdatepassword/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://fireactjs.com/docs/core-package/components/userupdatepassword/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>UserUpdatePassword is a form component for the current user to update their password. It is linked from the UserProfile component.&lt;/p>
&lt;h2 id="screenshot">Screenshot&lt;/h2>
&lt;p>&lt;img src="screenshot.png" alt="Screenshot">&lt;/p>
&lt;h2 id="source-code">Source Code&lt;/h2>
&lt;p>&lt;a href="https://github.com/fireactjs/core/blob/main/src/lib/components/user/UserUpdatePassword.js">https://github.com/fireactjs/core/blob/main/src/lib/components/user/UserUpdatePassword.js&lt;/a>&lt;/p></description></item></channel></rss>